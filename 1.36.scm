(define tolerance 0.00001)
(define (fixed-point f first-guess label)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (display label)
    (display " => ")
    (display guess)
    (newline)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guess))

(newline)
(display (fixed-point (lambda (x) (/ (log 1000) (log x))) 2.0 "without-average"))

(newline) (newline)
(display (fixed-point (lambda (x) (/ (+ x (/ (log 1000) (log x))) 2)) 2.0 "with-average"))
(newline)
