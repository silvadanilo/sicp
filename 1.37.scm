(define (cont-frac n d k)
  (if (= k 1)
      (/ (n k) (d k))
      (/ (n k) (+ (d k) (cont-frac n d (- k 1))))))

(newline)
(display "recursive " )
(display (cont-frac (lambda (i) 1.0)
           (lambda (i) 1.0)
           11))

(define (cont-frac-iter n d k)
  (define (iter i result)
    (if (= i 0)
        result
        (iter (- i 1) (/ (n i) (+ (d i) result)))))
  (iter (- k 1) (/ (n k) (d k))))

(newline)
(newline)
(display "iterative " )
(display (cont-frac-iter (lambda (i) 1.0)
           (lambda (i) 1.0)
           11))
(newline)
